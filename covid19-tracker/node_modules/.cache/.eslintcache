[{"/home/venkatesh/project/covid19/covid19-tracker/src/index.js":"1","/home/venkatesh/project/covid19/covid19-tracker/src/App.js":"2","/home/venkatesh/project/covid19/covid19-tracker/src/components/Home.js":"3","/home/venkatesh/project/covid19/covid19-tracker/src/components/header/Header.js":"4","/home/venkatesh/project/covid19/covid19-tracker/src/context/CovidContext.js":"5","/home/venkatesh/project/covid19/covid19-tracker/src/components/table/CovidTable.js":"6","/home/venkatesh/project/covid19/covid19-tracker/src/components/footer/Footer.js":"7","/home/venkatesh/project/covid19/covid19-tracker/src/components/util.js":"8","/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js":"9"},{"size":222,"mtime":1627213322895,"results":"10","hashOfConfig":"11"},{"size":263,"mtime":1627213322052,"results":"12","hashOfConfig":"11"},{"size":624,"mtime":1627213322052,"results":"13","hashOfConfig":"11"},{"size":7354,"mtime":1627213322536,"results":"14","hashOfConfig":"11"},{"size":1059,"mtime":1627213322887,"results":"15","hashOfConfig":"11"},{"size":8233,"mtime":1627213322887,"results":"16","hashOfConfig":"11"},{"size":316,"mtime":1627213322052,"results":"17","hashOfConfig":"11"},{"size":138,"mtime":1627213322887,"results":"18","hashOfConfig":"11"},{"size":2816,"mtime":1627213322052,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dus22w",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/home/venkatesh/project/covid19/covid19-tracker/src/index.js",[],"/home/venkatesh/project/covid19/covid19-tracker/src/App.js",[],"/home/venkatesh/project/covid19/covid19-tracker/src/components/Home.js",["43","44","45"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./header/Header.js\";\nimport CovidTable from \"./table/CovidTable.js\";\nimport Footer from \"./footer/Footer.js\";\nimport Graph from \"./graph/Graph.js\";\nimport axios from \"axios\";\nimport \"./Home.css\"\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <CovidTable />\n      <div className=\"graphs\">\n        <Graph casesType=\"cases\" title=\"Daily New Cases\"/>\n        <Graph casesType=\"recovered\" title=\"Daily Recovered\"/>\n        <Graph casesType=\"deaths\" title=\"Daily Deaths\"/>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","/home/venkatesh/project/covid19/covid19-tracker/src/components/header/Header.js",["46","47","48","49","50","51","52","53","54","55"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport \"./Header.css\";\n\nimport activeImage from \"../../img/active.jpg\";\nimport deathImage from \"../../img/deaths.jpg\";\nimport recoveredImage from \"../../img/recovered.jpg\";\n\n\n\nimport { CovidContext } from \"../../context/CovidContext\";\n\nconst commaNumber = require(\"comma-number\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 350,\n    alignItems: \"center\",\n    \"@media (max-width: 1450px)\": {\n      width: 300,\n    },\n    \"@media (max-width: 800px)\": {\n      width: 350,\n    }\n  },\n  media: {\n    height: 200,\n    maxWidth: 350,\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 220,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(0),\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  const [country, setCountry] = useState(\"\");\n\n  const [selected, setSelectedCountry] = useState(\"\");\n\n  const [countries, setCountries] = useState([]);\n\n  const [global, setGlobal, allCountries, setAllCountries] =\n    useContext(CovidContext);\n\n  const handleChange = (event) => {\n    setCountry(event.target.value);\n  };\n  // console.log(countries)\n\n  useEffect(() => {\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}`)\n      .then((data) => data.json())\n      .then((res) => setSelectedCountry(res));\n  }, [country]);\n  let temp = [];\n  useEffect(() => {\n    async function fetchMyAPI() {\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n      const data = await response.json();\n      if (data.length > 0) {\n        data.map((item) => temp.push({ title: item.country }));\n      }\n      temp.push({ title: \"Worldwide\" });\n      setCountries(temp);\n    }\n    fetchMyAPI();\n  }, []);\n  // console.log(selected);\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-top\">\n        <h1>Covid-19 Tracker</h1>\n      </div>\n      <div className=\"head\">\n        <div className=\"head-selected\">\n          <h2 className=\"selected-name\">\n            {country === \"\" ? \"Worldwide\" : country}\n          </h2>\n          <div className=\"selector\">\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={countries}\n              getOptionLabel={(option) => option.title}\n              onChange={(event, value) => {\n                if (value) {\n                  // setSelect(value.id)\n                  if (value.title === \"Worldwide\") {\n                    setCountry(\"\");\n                  } else {\n                    setCountry(value.title);\n                  }\n                }\n              }}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              renderInput={(params) => (\n                <TextField\n                  style={{ backgroundColor: \"#fffff9\" }}\n                  {...params}\n                  label=\"Country\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </div>\n        </div>\n        <div className=\"header-content\">\n          <div className=\"card\">\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={activeImage}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\n                  >\n                    Coronavirus Cases\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    // color=\"textSecondary\"\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", color: \"#5a5958\"}}\n                  >\n                    {country === \"\"\n                      ? global && commaNumber(global.cases)\n                      : commaNumber(selected.cases)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n          <div className=\"card\">\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={deathImage}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\n                  >\n                    Deaths\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\" , color: \"#5a5958\"}}\n                  >\n                    {country === \"\"\n                      ? global && commaNumber(global.deaths)\n                      : commaNumber(selected.deaths)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n          <div className=\"card\">\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={recoveredImage}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\" , fontWeight: 600}}\n                  >\n                    Recovered\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", color: \"#5a5958\" }}\n                  >\n                    {country === \"\"\n                      ? global && commaNumber(global.recovered)\n                      : commaNumber(selected.recovered)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/venkatesh/project/covid19/covid19-tracker/src/context/CovidContext.js",[],"/home/venkatesh/project/covid19/covid19-tracker/src/components/table/CovidTable.js",["56","57","58","59","60","61","62"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactPaginate from \"react-paginate\";\n\nimport \"./CovidTable.css\";\nimport { CovidContext } from \"../../context/CovidContext\";\n\nimport { FormControl, InputLabel, Select, TextField } from \"@material-ui/core\";\n\nconst commaNumber = require(\"comma-number\");\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n  img:{\n    paddingRight: \"20px\",\n    alignItem: \"center\",\n    height:\"16px\",\n    width:\"25px\"\n  }\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgb(2, 1, 59)\",\n    color: theme.palette.common.white,\n    fontSize: 19,\n    fontWeight: 400,\n    height: 50,\n    \"@media (max-width: 1450px)\": {\n        fontSize: 15,\n    },\n    \"@media (max-width: 1110px)\": {\n        fontSize: 12,\n    },\n  },\n  body: {\n    fontSize: 19,\n    fontWeight: 500,\n    \"@media (max-width: 1450px)\": {\n        fontSize: 14,\n    },\n    \"@media (max-width: 1110px)\": {\n        fontSize: 11,\n    },\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction CovidTable() {\n\n  \n\n  const classes = useStyles();\n  const changePage = async ({ selected }) => {\n    setPageNumber(selected);\n    setStarting(selected);\n  };\n\n  const [global, setGlobal, allCountries, setAllCountries, show, setShow] =\n    useContext(CovidContext);\n  \n  var l=0;\n  const [pageNumber, setPageNumber] = useState(0);\n  const [interval, setInterval] = useState(10);\n  const [starting, setStarting] = useState(0);\n  const [pagesVisited, setPagesVisited] = useState(0)\n  // const pagesVisited = pageNumber * interval;\n\n\n  const [loop, setLoop] = useState(1);\n\n  useEffect(() => {\n    setShow(allCountries.slice(pagesVisited, parseInt(pagesVisited)+ parseInt(interval)));\n    setLoop(pageNumber*interval);\n    setPagesVisited(pageNumber * interval)\n    l=pageNumber*interval;\n  },[pagesVisited, pageNumber, interval])\n    console.log(show);\n\n\n\n  var arr = [];\n  var lowEnd = 0;\n  var highEnd = 20;\n  while (lowEnd <= highEnd) {\n    arr.push((lowEnd += 5));\n  }\n  l=loop+1;\n  console.log(l);\n  return (\n    <div className=\"table\">\n      <div className=\"table-top\">\n        <div className=\"dropdown\">\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">\n              Entries\n            </InputLabel>\n            <Select\n              style={{\n                width: \"170%\",\n                height: \"90%\",\n                backgroundColor: \"#fcfcfc\",\n              }}\n              native\n              value={interval}\n              onChange={(e) => setInterval(e.target.value)}\n              label=\"Entries\"\n              inputProps={{\n                name: \"Entries\",\n                id: \"outlined-age-native-simple\",\n              }}\n            >\n              {/* <option value={30}>Thirty</option> */}\n              {/* {arr.map((i) => <MenuItem value={i}>{i}</MenuItem>)} */}\n              {arr.map((i) => (\n                <option value={i}>{i}</option>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"pagination\">\n          <ReactPaginate\n            previousLabel={\"Previous\"}\n            nextLabel={\"Next\"}\n            pageCount={Math.ceil(allCountries.length / interval)}\n            onPageChange={changePage}\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttn\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n          />\n        </div>\n      </div>\n      <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>#</StyledTableCell>\n                <StyledTableCell>\n                  <strong>Country</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Total Cases</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>New Cases</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Total Deaths</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>New Deaths</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Total Recovered</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>New Recovered</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Active Cases</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Serious, Critical</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Population</strong>\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {show && show.map((data) => (\n                <StyledTableRow>\n                  <StyledTableCell>{l++}</StyledTableCell>\n                  <StyledTableCell>\n                    <img className={classes.img}\n                      src={data.countryInfo.flag}\n                    />\n                    <strong>{data.country}</strong>\n                  </StyledTableCell>\n                  <StyledTableCell>{commaNumber(data.cases)}</StyledTableCell>\n                  <StyledTableCell style={{backgroundColor:\"#ffff99\"}}>\n                    {commaNumber(data.todayCases)}\n                  </StyledTableCell>\n                  <StyledTableCell>{commaNumber(data.deaths)}</StyledTableCell>\n                  <StyledTableCell style={{backgroundColor:\"#ff0000\"}}>\n                    {commaNumber(data.todayDeaths)}\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    {commaNumber(data.recovered)}\n                  </StyledTableCell>\n                  <StyledTableCell style={{backgroundColor: \"#98e1bd\"}}>\n                    {commaNumber(data.todayRecovered)}\n                  </StyledTableCell>\n                  <StyledTableCell>{commaNumber(data.active)}</StyledTableCell>\n                  <StyledTableCell>\n                    {commaNumber(data.critical)}\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    {commaNumber(data.population)}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n              {!show &&\n                <StyledTableRow>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                  \n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                 \n                  </StyledTableCell>\n                  <StyledTableCell>\n                    <strong>...loading</strong>\n                  </StyledTableCell>\n                  <StyledTableCell >\n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                  </StyledTableCell>\n                  <StyledTableCell>\n                  </StyledTableCell>\n                </StyledTableRow>\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default CovidTable;\n","/home/venkatesh/project/covid19/covid19-tracker/src/components/footer/Footer.js",["63","64"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <h2 className=\"name\">Covid 19-Tracker</h2>\n    </footer>\n  );\n}\n\nexport default Footer;\n","/home/venkatesh/project/covid19/covid19-tracker/src/components/util.js",[],"/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js",["65"],"import React, { useState, useEffect } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nimport \"./Graph.css\";\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction Graph({ casesType, title}) {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType) => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        charData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return charData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((res) => res.json())\n        .then((data) => {\n          const charData = buildChartData(data, casesType);\n          setData(charData);\n        });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"graph\">\n        <h2 className=\"title\">{title}</h2>\n      {data.length > 0 && (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                fill: true,\n                lineTension: 0.1,\n                backgroundColor: \"rgba(75,192,192,0.4)\",\n                borderColor: \"rgba(75,192,192,1)\",\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: \"rgba(75,192,192,1)\",\n                pointBackgroundColor: \"#fff\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: data,\n                \n              },\n            ],\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Graph;\n",{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"71","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":13},{"ruleId":"66","severity":1,"message":"72","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":19},{"ruleId":"66","severity":1,"message":"73","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":14},{"ruleId":"66","severity":1,"message":"74","line":59,"column":18,"nodeType":"68","messageId":"69","endLine":59,"endColumn":27},{"ruleId":"66","severity":1,"message":"75","line":59,"column":29,"nodeType":"68","messageId":"69","endLine":59,"endColumn":41},{"ruleId":"66","severity":1,"message":"76","line":59,"column":43,"nodeType":"68","messageId":"69","endLine":59,"endColumn":58},{"ruleId":"66","severity":1,"message":"77","line":62,"column":9,"nodeType":"68","messageId":"69","endLine":62,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":84,"column":6,"nodeType":"80","endLine":84,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":152,"column":21,"nodeType":"84","messageId":"85","endLine":152,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":184,"column":21,"nodeType":"84","messageId":"85","endLine":184,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":216,"column":21,"nodeType":"84","messageId":"85","endLine":216,"endColumn":33},{"ruleId":"66","severity":1,"message":"86","line":15,"column":43,"nodeType":"68","messageId":"69","endLine":15,"endColumn":52},{"ruleId":"66","severity":1,"message":"87","line":75,"column":10,"nodeType":"68","messageId":"69","endLine":75,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":75,"column":18,"nodeType":"68","messageId":"69","endLine":75,"endColumn":27},{"ruleId":"66","severity":1,"message":"76","line":75,"column":43,"nodeType":"68","messageId":"69","endLine":75,"endColumn":58},{"ruleId":"66","severity":1,"message":"88","line":81,"column":10,"nodeType":"68","messageId":"69","endLine":81,"endColumn":18},{"ruleId":"78","severity":1,"message":"89","line":92,"column":7,"nodeType":"90","endLine":92,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":194,"column":21,"nodeType":"93","endLine":196,"endColumn":23},{"ruleId":"66","severity":1,"message":"94","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":20},{"ruleId":"66","severity":1,"message":"95","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"96","line":84,"column":6,"nodeType":"80","endLine":84,"endColumn":8,"suggestions":"97"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'setGlobal' is assigned a value but never used.","'allCountries' is assigned a value but never used.","'setAllCountries' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'temp'. Either include it or remove the dependency array.","ArrayExpression",["98"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'TextField' is defined but never used.","'global' is assigned a value but never used.","'starting' is assigned a value but never used.","Assignments to the 'l' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","React Hook useEffect has a missing dependency: 'casesType'. Either include it or remove the dependency array.",["99"],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [temp]",{"range":"104","text":"105"},"Update the dependencies array to be: [casesType]",{"range":"106","text":"107"},[2286,2288],"[temp]",[1713,1715],"[casesType]"]