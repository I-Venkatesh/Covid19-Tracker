{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction Graph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        charData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return charData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(res => res.json()).then(data => {\n        const charData = buildChartData(data, \"cases\");\n        setData(charData);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgb(0, 7, 43)\",\n          borderColor: \"rgb(0, 7, 43)\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","Graph","setData","buildChartData","casesType","charData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","res","json","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction Graph() {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        charData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return charData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((res) => res.json())\n        .then((data) => {\n          const charData = buildChartData(data, \"cases\");\n          setData(charData);\n        });\n    };\n    fetchData()\n  }, []);\n\n  return (\n    <div>\n      <Line\n        options={options}\n        data={{\n          datasets: [\n            {\n              backgroundColor: \"rgb(0, 7, 43)\",\n              borderColor: \"rgb(0, 7, 43)\",\n              data: data,\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}