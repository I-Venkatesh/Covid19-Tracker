{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/project/covid19/covid19-tracker/src/context/CovidContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CovidContext = /*#__PURE__*/createContext();\n\nconst CovidData = props => {\n  _s();\n\n  const [global, setGlobal] = useState();\n  const [allCountries, setAllCountries] = useState([]);\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(data => data.json()).then(res => setGlobal(res));\n  }, []);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then(data => data.json()).then(res => setAllCountries(res));\n    console.log(allCountries);\n\n    if (allCountries.length > 0) {\n      allCountries.map(item => countries.push({\n        title: item.country\n      }));\n    }\n\n    async function fetchMyAPI() {\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n      const data = await response.json(); // setCourse(data.data);\n\n      var temp = [];\n      Object.entries(allCountries).map(item => temp.push({\n        country: item.country\n      }));\n      setCountries(temp); //   console.log(courses);\n      // setCourse(course);\n    }\n\n    fetchMyAPI();\n  }, []);\n  console.log(countries);\n  return /*#__PURE__*/_jsxDEV(CovidContext.Provider, {\n    value: [global, setGlobal, allCountries, setAllCountries],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CovidData, \"wdyGlgxxtL0Caa8++0w6uX2Arss=\");\n\n_c = CovidData;\nexport { CovidContext, CovidData };\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidData\");","map":{"version":3,"sources":["/home/venkatesh/project/covid19/covid19-tracker/src/context/CovidContext.js"],"names":["React","useState","useEffect","createContext","CovidContext","CovidData","props","global","setGlobal","allCountries","setAllCountries","countries","setCountries","fetch","then","data","json","res","console","log","length","map","item","push","title","country","fetchMyAPI","response","temp","Object","entries","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;;AAEA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;;AAEA,MAAME,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,GAAD,IAAST,SAAS,CAACS,GAAD,CAF1B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,GAAD,IAASP,eAAe,CAACO,GAAD,CAFhC;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;;AACA,QAAIA,YAAY,CAACW,MAAb,GAAsB,CAA1B,EAA6B;AAC5BX,MAAAA,YAAY,CAACY,GAAb,CAAkBC,IAAD,IACdX,SAAS,CAACY,IAAV,CAAe;AACbC,QAAAA,KAAK,EAAEF,IAAI,CAACG;AADC,OAAf,CADH;AAKA;;AACD,mBAAeC,UAAf,GAA4B;AAC1B,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAAC,0CAAD,CAA5B;AACA,YAAME,IAAI,GAAG,MAAMY,QAAQ,CAACX,IAAT,EAAnB,CAF0B,CAG1B;;AACA,UAAIY,IAAI,GAAG,EAAX;AACAC,MAAAA,MAAM,CAACC,OAAP,CAAerB,YAAf,EAA6BY,GAA7B,CAAkCC,IAAD,IAC/BM,IAAI,CAACL,IAAL,CAAU;AACRE,QAAAA,OAAO,EAAEH,IAAI,CAACG;AADN,OAAV,CADF;AAKAb,MAAAA,YAAY,CAACgB,IAAD,CAAZ,CAV0B,CAW5B;AACE;AACD;;AACDF,IAAAA,UAAU;AACX,GA3BQ,EA2BN,EA3BM,CAAT;AA6BAR,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE,CAACJ,MAAD,EAASC,SAAT,EAAoBC,YAApB,EAAkCC,eAAlC,CADT;AAAA,cAGGJ,KAAK,CAACyB;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/CD;;GAAM1B,S;;KAAAA,S;AAgDN,SAASD,YAAT,EAAuBC,SAAvB","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nconst CovidContext = createContext();\n\nconst CovidData = (props) => {\n  const [global, setGlobal] = useState();\n  const [allCountries, setAllCountries] = useState([]);\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((data) => data.json())\n      .then((res) => setGlobal(res));\n  }, []);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((data) => data.json())\n      .then((res) => setAllCountries(res));\n    console.log(allCountries);\n    if (allCountries.length > 0) {\n     allCountries.map((item) =>\n        countries.push({\n          title: item.country,\n        })\n      );\n    }\n    async function fetchMyAPI() {\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      const data = await response.json();\n      // setCourse(data.data);\n      var temp = [];\n      Object.entries(allCountries).map((item) =>\n        temp.push({\n          country: item.country\n        })\n      );\n      setCountries(temp);\n    //   console.log(courses);\n      // setCourse(course);\n    }\n    fetchMyAPI();\n  }, []);\n\n  console.log(countries);\n  return (\n    <CovidContext.Provider\n      value={[global, setGlobal, allCountries, setAllCountries]}\n    >\n      {props.children}\n    </CovidContext.Provider>\n  );\n};\nexport { CovidContext, CovidData };\n"]},"metadata":{},"sourceType":"module"}