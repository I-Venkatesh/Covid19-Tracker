{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  }\n};\n\nfunction Graph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        charData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return charData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(res => res.json()).then(data => {\n      const charData = buildChartData(data, 'cases');\n      setData(charData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgb(0, 7, 43)\",\n          borderColor: \"rgb(0, 7, 43)\",\n          data: data\n        }]\n      },\n      option: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js"],"names":["React","useState","useEffect","Line","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","Graph","setData","buildChartData","casesType","charData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","res","json","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,KAAK,EAAC;AACFC,MAAAA,MAAM,EAAE;AADN;AADD,GAJG;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,SAAS,EAAE,KAFN;AAGLC,IAAAA,SAAS,EAAC;AACNC,MAAAA,KAAK,EAAE,UAASC,WAAT,EAAsBC,IAAtB,EAA2B;AAC9B,eAAOC,OAAO,CAACF,WAAW,CAACG,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;AACH;AAHK;AAHL;AAVG,CAAhB;;AAqBA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMsB,cAAc,GAAG,CAACN,IAAD,EAAMO,SAAS,GAAC,OAAhB,KAA4B;AACjD,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAIC,aAAJ;;AAEA,SAAK,IAAIC,IAAT,IAAiBV,IAAI,CAACW,KAAtB,EAA6B;AAC3B,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEH,IADgB;AAEnBI,UAAAA,CAAC,EAAEd,IAAI,CAACO,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFR,SAArB;AAIAD,QAAAA,QAAQ,CAACO,IAAT,CAAcH,YAAd;AACD;;AACDH,MAAAA,aAAa,GAAGT,IAAI,CAACO,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACD;;AACD,WAAOF,QAAP;AACD,GAfD;;AAiBAvB,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESjB,IAAD,IAAU;AACd,YAAMQ,QAAQ,GAAGF,cAAc,CAACN,IAAD,EAAO,OAAP,CAA/B;AACAK,MAAAA,OAAO,CAACG,QAAD,CAAP;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,2BACE,QAAC,IAAD;AACA,MAAA,OAAO,EAAErB,OADT;AAEA,MAAA,IAAI,EAAI;AACJiC,QAAAA,QAAQ,EAAC,CAAC;AACNC,UAAAA,eAAe,EAAE,eADX;AAENC,UAAAA,WAAW,EAAE,eAFP;AAGNtB,UAAAA,IAAI,EAAEA;AAHA,SAAD;AADL,OAFR;AASA,MAAA,MAAM;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3CQI,K;;KAAAA,K;AA6CT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements:{\n        point:{\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips:{\n        mode: \"index\",\n        intersect: false,\n        callbacks:{\n            label: function(tooltipItem, data){\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n        },\n    },\n}\n\nfunction Graph() {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data,casesType=\"cases\") => {\n    const charData = [];\n    let lastDataPoint;\n\n    for( let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        charData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return charData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n      .then((res) => res.json())\n      .then((data) => {\n        const charData = buildChartData(data, 'cases')\n        setData(charData)\n      });\n  }, []);\n\n  return (\n    <div>\n      <Line \n      options={options}\n      data = {{\n          datasets:[{\n              backgroundColor: \"rgb(0, 7, 43)\",\n              borderColor: \"rgb(0, 7, 43)\",\n              data: data\n          }]\n      }}\n      option />\n    </div>\n  );\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}