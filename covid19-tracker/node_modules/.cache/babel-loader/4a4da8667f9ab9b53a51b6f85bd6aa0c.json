{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport \"./Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 2\n    }\n  } //   maintainAspectRatio: false,\n  //   tooltips: {\n  //     mode: \"index\",\n  //     intersect: false,\n  //     callbacks: {\n  //       label: function (tooltipItem, data) {\n  //         return numeral(tooltipItem.value).format(\"+0,0\");\n  //       },\n  //     },\n  //   },\n  //   scales: {\n  //     xAxes: [\n  //       {\n  //         type: \"time\",\n  //         time: {\n  //           format: \"MM/DD/YY\",\n  //           tooltipFormat: \"ll\",\n  //         },\n  //       },  \n  //     ],\n  //     yAxes: [\n  //       {\n  //         gridLines: {\n  //           display: false,\n  //         },\n  //         ticks: {\n  //           callback: function (value, index, values) {\n  //             return numeral(value).format(\"0a\");\n  //           },\n  //         },\n  //       },\n  //     ],\n  //   },\n\n};\n\nfunction Graph({\n  casesType\n}) {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType) => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        charData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return charData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(res => res.json()).then(data => {\n        const charData = buildChartData(data, casesType);\n        setData(charData);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph\",\n    children: data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(0, 7, 43,1)\",\n          borderColor: \"rgb(0, 7, 43)\",\n          color: \"#666\",\n          data: data\n        }]\n      },\n      option: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/venkatesh/project/covid19/covid19-tracker/src/components/graph/Graph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","Graph","casesType","data","setData","buildChartData","charData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","res","json","length","datasets","backgroundColor","borderColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,aAAP;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GADM;AAIdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AADC,GAJI,CAShB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzCgB,CAAhB;;AA4CA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAA4B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMc,cAAc,GAAG,CAACF,IAAD,EAAOD,SAAP,KAAqB;AAC1C,UAAMI,QAAQ,GAAG,EAAjB;AACA,QAAIC,aAAJ;;AAEA,SAAK,IAAIC,IAAT,IAAiBL,IAAI,CAACM,KAAtB,EAA6B;AAC3B,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEH,IADgB;AAEnBI,UAAAA,CAAC,EAAET,IAAI,CAACD,SAAD,CAAJ,CAAgBM,IAAhB,IAAwBD;AAFR,SAArB;AAIAD,QAAAA,QAAQ,CAACO,IAAT,CAAcH,YAAd;AACD;;AACDH,MAAAA,aAAa,GAAGJ,IAAI,CAACD,SAAD,CAAJ,CAAgBM,IAAhB,CAAhB;AACD;;AACD,WAAOF,QAAP;AACD,GAfD;;AAiBAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CAAC,4DAAD,CAAL,CACHC,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGb,IAAD,IAAU;AACd,cAAMG,QAAQ,GAAGD,cAAc,CAACF,IAAD,EAAOD,SAAP,CAA/B;AACAE,QAAAA,OAAO,CAACE,QAAD,CAAP;AACD,OALG,CAAN;AAMD,KAPD;;AAQAQ,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACIX,IAAI,CAACgB,MAAL,GAAc,CAAd,iBACA,QAAC,IAAD;AACE,MAAA,OAAO,EAAExB,OADX;AAEE,MAAA,IAAI,EAAE;AACJyB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,eAAe,EAAE,kBADnB;AAEEC,UAAAA,WAAW,EAAE,eAFf;AAGEC,UAAAA,KAAK,EAAE,MAHT;AAIEpB,UAAAA,IAAI,EAAEA;AAJR,SADQ;AADN,OAFR;AAYE,MAAA,MAAM;AAZR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApDQF,K;;KAAAA,K;AAsDT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nimport \"./Graph.css\"\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 2,\n    },\n  },\n//   maintainAspectRatio: false,\n//   tooltips: {\n//     mode: \"index\",\n//     intersect: false,\n//     callbacks: {\n//       label: function (tooltipItem, data) {\n//         return numeral(tooltipItem.value).format(\"+0,0\");\n//       },\n//     },\n//   },\n//   scales: {\n//     xAxes: [\n//       {\n//         type: \"time\",\n//         time: {\n//           format: \"MM/DD/YY\",\n//           tooltipFormat: \"ll\",\n//         },\n//       },  \n//     ],\n//     yAxes: [\n//       {\n//         gridLines: {\n//           display: false,\n//         },\n//         ticks: {\n//           callback: function (value, index, values) {\n//             return numeral(value).format(\"0a\");\n//           },\n//         },\n//       },\n//     ],\n//   },\n};\n\nfunction Graph({casesType}) {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType) => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        charData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return charData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((res) => res.json())\n        .then((data) => {\n          const charData = buildChartData(data, casesType);\n          setData(charData);\n        });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"graph\">\n      { data.length > 0 && \n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(0, 7, 43,1)\",\n                borderColor: \"rgb(0, 7, 43)\",\n                color: \"#666\",\n                data: data,\n              },\n            ],\n          }}\n          option\n        />\n      }\n    </div>\n  );\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}