{"version":3,"sources":["img/active.jpg","img/deaths.jpg","img/recovered.jpg","components/util.js","context/CovidContext.js","components/header/Header.js","components/table/CovidTable.js","components/footer/Footer.js","components/graph/Graph.js","components/Home.js","App.js","index.js"],"names":["sortData","data","sort","a","b","cases","CovidContext","createContext","CovidData","props","useState","global","setGlobal","allCountries","setAllCountries","show","setShow","useEffect","fetch","then","json","res","response","sortedData","slice","fetchMyAPI","Provider","value","children","commaNumber","require","useStyles","makeStyles","theme","root","width","alignItems","media","height","maxWidth","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Header","classes","country","setCountry","selected","setSelectedCountry","countries","setCountries","useContext","temp","length","map","item","push","title","className","Autocomplete","id","options","getOptionLabel","option","onChange","event","anchorOrigin","vertical","horizontal","transformOrigin","renderInput","params","TextField","style","backgroundColor","label","variant","Card","CardActionArea","CardMedia","image","activeImage","CardContent","Typography","gutterBottom","component","display","justifyContent","fontWeight","color","deathImage","deaths","recoveredImage","recovered","table","img","paddingRight","alignItem","StyledTableCell","withStyles","head","palette","common","white","fontSize","body","TableCell","StyledTableRow","action","hover","TableRow","CovidTable","changePage","setPageNumber","setStarting","l","pageNumber","interval","setInterval","pagesVisited","setPagesVisited","loop","setLoop","parseInt","console","log","arr","lowEnd","FormControl","InputLabel","htmlFor","Select","native","e","target","inputProps","name","i","previousLabel","nextLabel","pageCount","Math","ceil","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","TableContainer","Paper","Table","aria-label","TableHead","TableBody","src","countryInfo","flag","todayCases","todayDeaths","todayRecovered","active","critical","population","Footer","plugins","legend","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","tooltipItem","numeral","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","Graph","casesType","setData","buildChartData","lastDataPoint","charData","date","newDataPoint","x","y","fetchData","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faf90ec9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/active.082647ff.jpg\";","export default __webpack_public_path__ + \"static/media/deaths.1f98b0c4.jpg\";","export default __webpack_public_path__ + \"static/media/recovered.188dbdb5.jpg\";","export const sortData = (data) => {\n  const sortedData = [...data];\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1))\n};\n","import React, { useState, useEffect, createContext } from \"react\";\n\nimport { sortData } from \"../components/util.js\"\n\nconst CovidContext = createContext();\n\nconst CovidData = (props) => {\n  const [global, setGlobal] = useState();\n  const [allCountries, setAllCountries] = useState([]);\n  const [show, setShow] = useState();\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((data) => data.json())\n      .then((res) => setGlobal(res));\n  }, []);\n  useEffect(() => {\n    async function fetchMyAPI() {\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n      const data = await response.json();\n      // console.log(data);\n      const sortedData = sortData(data);\n      setAllCountries(sortedData);\n      setShow(sortedData.slice(0,10));\n    }\n    fetchMyAPI();\n  }, []);\n\n\n  return (\n      \n    <CovidContext.Provider\n      value={[global, setGlobal, allCountries, setAllCountries,show, setShow]}\n    >\n\n      {props.children}\n    </CovidContext.Provider>\n  );\n};\nexport { CovidContext, CovidData };\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport \"./Header.css\";\n\nimport activeImage from \"../../img/active.jpg\";\nimport deathImage from \"../../img/deaths.jpg\";\nimport recoveredImage from \"../../img/recovered.jpg\";\n\n\n\nimport { CovidContext } from \"../../context/CovidContext\";\n\nconst commaNumber = require(\"comma-number\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 350,\n    alignItems: \"center\",\n    \"@media (max-width: 1450px)\": {\n      width: 300,\n    },\n    \"@media (max-width: 800px)\": {\n      width: 350,\n    }\n  },\n  media: {\n    height: 200,\n    maxWidth: 350,\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 220,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(0),\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  const [country, setCountry] = useState(\"\");\n\n  const [selected, setSelectedCountry] = useState(\"\");\n\n  const [countries, setCountries] = useState([]);\n\n  const [global, setGlobal, allCountries, setAllCountries] =\n    useContext(CovidContext);\n\n  const handleChange = (event) => {\n    setCountry(event.target.value);\n  };\n  // console.log(countries)\n\n  useEffect(() => {\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}`)\n      .then((data) => data.json())\n      .then((res) => setSelectedCountry(res));\n  }, [country]);\n  let temp = [];\n  useEffect(() => {\n    async function fetchMyAPI() {\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n      const data = await response.json();\n      if (data.length > 0) {\n        data.map((item) => temp.push({ title: item.country }));\n      }\n      temp.push({ title: \"Worldwide\" });\n      setCountries(temp);\n    }\n    fetchMyAPI();\n  }, []);\n  // console.log(selected);\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-top\">\n        <h1>Covid-19 Tracker</h1>\n      </div>\n      <div className=\"head\">\n        <div className=\"head-selected\">\n          <h2 className=\"selected-name\">\n            {country === \"\" ? \"Worldwide\" : country}\n          </h2>\n          <div className=\"selector\">\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={countries}\n              getOptionLabel={(option) => option.title}\n              onChange={(event, value) => {\n                if (value) {\n                  // setSelect(value.id)\n                  if (value.title === \"Worldwide\") {\n                    setCountry(\"\");\n                  } else {\n                    setCountry(value.title);\n                  }\n                }\n              }}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              renderInput={(params) => (\n                <TextField\n                  style={{ backgroundColor: \"#fffff9\" }}\n                  {...params}\n                  label=\"Country\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </div>\n        </div>\n        <div className=\"header-content\">\n          <div className=\"card\">\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={activeImage}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\n                  >\n                    Coronavirus Cases\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    // color=\"textSecondary\"\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", color: \"#5a5958\"}}\n                  >\n                    {country === \"\"\n                      ? global && commaNumber(global.cases)\n                      : commaNumber(selected.cases)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n          <div className=\"card\">\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={deathImage}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", fontWeight: 600 }}\n                  >\n                    Deaths\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\" , color: \"#5a5958\"}}\n                  >\n                    {country === \"\"\n                      ? global && commaNumber(global.deaths)\n                      : commaNumber(selected.deaths)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n          <div className=\"card\">\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image={recoveredImage}\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\" , fontWeight: 600}}\n                  >\n                    Recovered\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{ display: \"flex\", justifyContent: \"center\", color: \"#5a5958\" }}\n                  >\n                    {country === \"\"\n                      ? global && commaNumber(global.recovered)\n                      : commaNumber(selected.recovered)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactPaginate from \"react-paginate\";\n\nimport \"./CovidTable.css\";\nimport { CovidContext } from \"../../context/CovidContext\";\n\nimport { FormControl, InputLabel, Select, TextField } from \"@material-ui/core\";\n\nconst commaNumber = require(\"comma-number\");\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n  img:{\n    paddingRight: \"20px\",\n    alignItem: \"center\",\n    height:\"16px\",\n    width:\"25px\"\n  }\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgb(2, 1, 59)\",\n    color: theme.palette.common.white,\n    fontSize: 19,\n    fontWeight: 400,\n    height: 50,\n    \"@media (max-width: 1450px)\": {\n        fontSize: 15,\n    },\n    \"@media (max-width: 1110px)\": {\n        fontSize: 12,\n    },\n  },\n  body: {\n    fontSize: 19,\n    fontWeight: 500,\n    \"@media (max-width: 1450px)\": {\n        fontSize: 14,\n    },\n    \"@media (max-width: 1110px)\": {\n        fontSize: 11,\n    },\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction CovidTable() {\n\n  \n\n  const classes = useStyles();\n  const changePage = async ({ selected }) => {\n    setPageNumber(selected);\n    setStarting(selected);\n  };\n\n  const [global, setGlobal, allCountries, setAllCountries, show, setShow] =\n    useContext(CovidContext);\n  \n  var l=0;\n  const [pageNumber, setPageNumber] = useState(0);\n  const [interval, setInterval] = useState(10);\n  const [starting, setStarting] = useState(0);\n  const [pagesVisited, setPagesVisited] = useState(0)\n  // const pagesVisited = pageNumber * interval;\n\n\n  const [loop, setLoop] = useState(1);\n\n  useEffect(() => {\n    setShow(allCountries.slice(pagesVisited, parseInt(pagesVisited)+ parseInt(interval)));\n    setLoop(pageNumber*interval);\n    setPagesVisited(pageNumber * interval)\n    l=pageNumber*interval;\n  },[pagesVisited, pageNumber, interval])\n    console.log(show);\n\n\n\n  var arr = [];\n  var lowEnd = 0;\n  var highEnd = 20;\n  while (lowEnd <= highEnd) {\n    arr.push((lowEnd += 5));\n  }\n  l=loop+1;\n  console.log(l);\n  return (\n    <div className=\"table\">\n      <div className=\"table-top\">\n        <div className=\"dropdown\">\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">\n              Entries\n            </InputLabel>\n            <Select\n              style={{\n                width: \"170%\",\n                height: \"90%\",\n                backgroundColor: \"#fcfcfc\",\n              }}\n              native\n              value={interval}\n              onChange={(e) => setInterval(e.target.value)}\n              label=\"Entries\"\n              inputProps={{\n                name: \"Entries\",\n                id: \"outlined-age-native-simple\",\n              }}\n            >\n              {/* <option value={30}>Thirty</option> */}\n              {/* {arr.map((i) => <MenuItem value={i}>{i}</MenuItem>)} */}\n              {arr.map((i) => (\n                <option value={i}>{i}</option>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"pagination\">\n          <ReactPaginate\n            previousLabel={\"Previous\"}\n            nextLabel={\"Next\"}\n            pageCount={Math.ceil(allCountries.length / interval)}\n            onPageChange={changePage}\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttn\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n          />\n        </div>\n      </div>\n      <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>#</StyledTableCell>\n                <StyledTableCell>\n                  <strong>Country</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Total Cases</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>New Cases</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Total Deaths</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>New Deaths</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Total Recovered</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>New Recovered</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Active Cases</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Serious, Critical</strong>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <strong>Population</strong>\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {show && show.map((data) => (\n                <StyledTableRow>\n                  <StyledTableCell>{l++}</StyledTableCell>\n                  <StyledTableCell>\n                    <img className={classes.img}\n                      src={data.countryInfo.flag}\n                    />\n                    <strong>{data.country}</strong>\n                  </StyledTableCell>\n                  <StyledTableCell>{commaNumber(data.cases)}</StyledTableCell>\n                  <StyledTableCell style={{backgroundColor:\"#ffff99\"}}>\n                    {commaNumber(data.todayCases)}\n                  </StyledTableCell>\n                  <StyledTableCell>{commaNumber(data.deaths)}</StyledTableCell>\n                  <StyledTableCell style={{backgroundColor:\"#ff0000\"}}>\n                    {commaNumber(data.todayDeaths)}\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    {commaNumber(data.recovered)}\n                  </StyledTableCell>\n                  <StyledTableCell style={{backgroundColor: \"#98e1bd\"}}>\n                    {commaNumber(data.todayRecovered)}\n                  </StyledTableCell>\n                  <StyledTableCell>{commaNumber(data.active)}</StyledTableCell>\n                  <StyledTableCell>\n                    {commaNumber(data.critical)}\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    {commaNumber(data.population)}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n              {!show &&\n                <StyledTableRow>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                  \n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                 \n                  </StyledTableCell>\n                  <StyledTableCell>\n                    <strong>...loading</strong>\n                  </StyledTableCell>\n                  <StyledTableCell >\n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>\n                  </StyledTableCell>\n                  <StyledTableCell>\n                  </StyledTableCell>\n                </StyledTableRow>\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default CovidTable;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <h2 className=\"name\">Covid 19-Tracker</h2>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nimport \"./Graph.css\";\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction Graph({ casesType, title}) {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType) => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        charData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return charData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((res) => res.json())\n        .then((data) => {\n          const charData = buildChartData(data, casesType);\n          setData(charData);\n        });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"graph\">\n        <h2 className=\"title\">{title}</h2>\n      {data.length > 0 && (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                fill: true,\n                lineTension: 0.1,\n                backgroundColor: \"rgba(75,192,192,0.4)\",\n                borderColor: \"rgba(75,192,192,1)\",\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: \"rgba(75,192,192,1)\",\n                pointBackgroundColor: \"#fff\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: data,\n                \n              },\n            ],\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Graph;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./header/Header.js\";\nimport CovidTable from \"./table/CovidTable.js\";\nimport Footer from \"./footer/Footer.js\";\nimport Graph from \"./graph/Graph.js\";\nimport axios from \"axios\";\nimport \"./Home.css\"\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <CovidTable />\n      <div className=\"graphs\">\n        <Graph casesType=\"cases\" title=\"Daily New Cases\"/>\n        <Graph casesType=\"recovered\" title=\"Daily Recovered\"/>\n        <Graph casesType=\"deaths\" title=\"Daily Deaths\"/>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./components/Home.js\";\nimport { CovidData } from \"./context/CovidContext.js\";\nfunction App() {\n  return (\n    <CovidData>\n      <div className=\"App\">\n        <Home />\n      </div>\n    </CovidData>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}